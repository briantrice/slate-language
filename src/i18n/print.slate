
c@(UnicodeCharacter traits) printOn: w &inString: isInString &encodedIn: encoding &makeEncoder: makeEncoder
[| encoder |
  makeEncoder `defaultsTo: False.
  isInString `defaultsTo: False.
  encoding `defaultsTo: UTF8.
  encoder := (makeEncoder ifTrue: [encoding Encoder newOn: w] ifFalse: [w]).
  c code ifNil: [encoder ; '("' ; c printName ; '")']
     ifNotNil: [isInString ifFalse: [encoder nextPut: ($$ as: c)].
                encoder nextPut: c].
].

c@(UnicodeSubset traits) printOn: w
[w ; '("Unicode ' ; c printName ; '")'].

s@(EncodedString traits) printOn: w
[s do: [| :each | each printOn: w &inString: True]].

s@(UnicodeString traits) printOn: o &encodedIn: encoding &makeEncoder: makeEncoder
"Print the String readably, using escapes to preserve the contents."
"FIXME: this currently relies on the fact that every unprintable character
is in 8-bit range. That might change."
[| encoder |
  makeEncoder `defaultsTo: False.
  encoding `defaultsTo: UTF8.
  encoder := makeEncoder ifTrue: [encoding Encoder newOn: o] ifFalse: [o].
  encoder nextPut: ($\' as: s elementType).
  s doWithIndex:
    [| :c :index |
     index >= o stringLimit
       ifTrue: ['...\'' printOn: encoder. ^ o].
     c caseOf: {
       (16r27 as: s elementType) -> ['\\\'' printOn: encoder].
       (16r9 as: s elementType) -> ['\\t' printOn: encoder].
       (16rA as: s elementType) -> ['\\n' printOn: encoder].
       (16rB as: s elementType) -> ['\\v' printOn: encoder].
       (16rC as: s elementType) -> ['\\f' printOn: encoder].
       (16rD as: s elementType) -> ['\\r' printOn: encoder].
       (16r8 as: s elementType) -> ['\\b' printOn: encoder].
       (16r7 as: s elementType) -> ['\\a' printOn: encoder].
       (16r1B as: s elementType) -> ['\\e' printOn: encoder].
       (16r0 as: s elementType) -> ['\\0' printOn: encoder]
     } otherwise:
       [c isPrintable
          ifTrue: [c printOn: encoder &inString: True]
          ifFalse:
            ['\\x' printOn: encoder.
             c code // 16 printOn: o radix: 16.
             c code \\ 16 printOn: o radix: 16]]].
  encoder nextPut: ($\' as: s elementType).
  o
].
